<?php


/**
 * @file
 * Install and uninstall for the checklist.install
 */

/**
 * Implements hook_install().
 */
function checklist_install() {
  db_update('system')->fields(array(
    'weight' => 5,
  ))->condition('name', "checklist")->execute();
}

/**
 * Implements hook_uninstall().
 */
function checklist_uninstall() {
  variable_del('checklist_show_on_login');
  variable_del('checklist_continue_path');
  variable_del('checklist_continue_text');
  variable_del('checklist_page_format');
  variable_del('checklist_page_description');
  variable_del('checklist_page_title');
}

/**
 * Implements hook_schema().
 */
function checklist_schema() {
  $schema = array();
  $schema['checklist_lists'] = array(
    'description' => 'A complete checklist',
    'fields' => array(
      'clid' => array(
        'description' => 'The unqiue identifier for the checklist base/template',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The checklist name',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'The description of the checklist',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'format' => array(
        'description' => 'The input format of the description',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'message' => array(
        'description' => 'Message to display to user on completion of checklist.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'rid_on_complete' => array(
        'description' => 'The role to assign when completed',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'first_uid' => array(
        'description' => 'The first user id to start requiring this checklist',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'restrict_nav' => array(
        'description' => 'Whether or not to allow a user to navigate to other pages',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'size' => 'small',
      ),
      'force_order' => array(
        'description' => 'Force items to be completed in order.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'size' => 'tiny',
      ),
      'weight' => array(
        'description' => 'Where the checklist appears in the list',
        'type' => 'int',
        'not null' => TRUE,
        'disp-width' => '3',
      ),
      'status' => array(
        'description' => 'Status of the checklist',
        'type' => 'int',
        'not null' => TRUE,
        'size' => 'small',
      ),
    ),
    'primary key' => array('clid'),
    'indexes' => array(
      'weight' => array('weight', 'title'),
    ),
  );
  $schema['checklist_instances'] = array(
    'description' => 'An instance of a checklist',
    'fields' => array(
      'instance_id' => array(
        'description' => 'The unique instance of the checklist',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'clid' => array(
        'description' => 'Foreign key: The unqiue identifier for a checklist base',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The checklist instance title',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'group_complete' => array(
        'description' => 'Whether or not the instance is completed by each person in group or together',
        'type' => 'int',
        'not null' => TRUE,
        'size' => 'tiny',
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Whether or not this instance is active.',
        'type' => 'int',
        'not null' => TRUE,
        'size' => 'tiny',
      ),
    ),
    'primary key' => array('instance_id'),
    'indexes' => array(
      'checklist' => array('clid'),
    ),
  );
  $schema['checklist_items'] = array(
    'description' => 'Individual checklist items',
    'fields' => array(
      'cliid' => array(
        'description' => 'The unique identifier for the checklist item',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'clid' => array(
        'description' => 'The checklist (foreign key)',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'cltid' => array(
        'description' => 'The checklist item type',
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => '128',
      ),
      'data' => array(
        'description' => 'Data for the item handler',
        'type' => 'text',
        'not null' => FALSE,
        'serialize' => TRUE,
      ),
      'title' => array(
        'description' => 'The name of this item',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'The description of this item',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'format' => array(
        'description' => 'The input format of this description',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'allow_uncheck' => array(
        'description' => 'Allow a user to uncheck this item',
        'type' => 'int',
        'not null' => TRUE,
        'size' => 'small',
      ),
      'weight' => array(
        'description' => 'Sort the checklist item',
        'type' => 'int',
        'not null' => TRUE,
        'size' => 'small',
      ),
      'status' => array(
        'description' => 'Status of the checklist item',
        'type' => 'int',
        'not null' => TRUE,
        'size' => 'small',
      ),
    ),
    'primary key' => array('cliid'),
    'indexes' => array(
      'clid' => array('clid', 'weight', 'title'),
    ),
  );
  $schema['checklist_user_checks'] = array(
    'description' => 'Record which items a user has completed.',
    'fields' => array(
      'uid' => array(
        'description' => 'The user to whom this check belongs',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'instance_id' => array(
        'description' => 'The instance of the checklist that the item was completed for.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'cliid' => array(
        'description' => 'The item that was completed',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'checked_on' => array(
        'description' => 'The timestamp when the item was completed',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'checked_by' => array(
        'description' => 'The user that checked this item',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('uid', 'instance_id', 'cliid'),
  );
  $schema['checklist_complete'] = array(
    'description' => 'Record when a user completes a checklist.',
    'fields' => array(
      'uid' => array(
        'description' => 'The user to whom this check belongs',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'instance_id' => array(
        'description' => 'The checklist instance that was completed',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'completed' => array(
        'description' => 'The timestamp when the checklist was completed',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('uid', 'instance_id'),
  );
  $schema['checklist_groups'] = array(
    'description' => 'Which user groups are required to complete a checklist',
    'fields' => array(
      'instance_id' => array(
        'description' => 'The checklist instance (foreign key)',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'group_id' => array(
        'description' => 'The group',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('instance_id', 'group_id'),
  );
  return $schema;
}

/**
 * Upgrade from Drupal 6 to Drupal 7.
 */
function checklist_update_7000() {
  $val = array(
   'format' => variable_get('checklist_page_format', FILTER_FORMAT_DEFAULT),
   'value' => variable_get('checklist_page_description', ''),
  );
  variable_set('checklist_page_description', $val);
  variable_del('checklist_page_format');
}

/**
 * Upgrade to Drupal 7.x-2.0.
 */
function checklist_update_7200() {
  // This module is now required.
  if (!module_exists('usergroups_api')) {
    throw new DrupalUpdateException('Version 2.0 of Checklist relies on the Usergroups API module. You must enable this module before upgrading. See UPGRADE.txt for details.');
  }
  $schema = array(
    'description' => 'An instance of a checklist',
    'fields' => array(
      'instance_id' => array(
        'description' => 'The unique instance of the checklist',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'clid' => array(
        'description' => 'Foreign key: The unqiue identifier for a checklist base',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The checklist instance title',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'group_complete' => array(
        'description' => 'Whether or not the instance is completed by each person in group or together',
        'type' => 'int',
        'not null' => TRUE,
        'size' => 'tiny',
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Whether or not this instance is active.',
        'type' => 'int',
        'not null' => TRUE,
        'size' => 'tiny',
      ),
    ),
    'primary key' => array('instance_id'),
    'indexes' => array(
      'checklist' => array('clid'),
    ),
  );
  db_create_table('checklist_instances', $schema);

  db_drop_primary_key('checklist_user_checks');
  $schema = array(
    'description' => 'The instance of the checklist that the item was completed for.',
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
  );
  $keys = array(
    'primary key' => array('uid', 'instance_id', 'cliid'),
  );
  db_add_field('checklist_user_checks', 'instance_id', $schema, $keys);

  db_drop_primary_key('checklist_complete');
  $schema = array(
    'description' => 'The instance of the checklist that was completed.',
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
  );
  $keys = array(
    'primary key' => array('uid', 'instance_id'),
  );
  db_add_field('checklist_complete', 'instance_id', $schema, $keys);

  $schema = array(
    'description' => 'Which user groups are required to complete a checklist',
    'fields' => array(
      'instance_id' => array(
        'description' => 'The checklist instance (foreign key)',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'group_id' => array(
        'description' => 'The group',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('instance_id', 'group_id'),
  );
  db_create_table('checklist_groups', $schema);

  // Rebuild this schema.
  //drupal_get_schema(NULL, TRUE);

  $map = array();
  $results = db_query('SELECT * FROM {checklist_lists}');
  foreach ($results as $checklist) {
    drupal_write_record('checklist_instances', $checklist);
    $map[$checklist->clid] = $checklist->instance_id;
  }


  $results = db_query('SELECT * FROM {checklist_items}');
  foreach ($results as $item) {
    db_update('checklist_user_checks')
      ->fields(array(
        'instance_id' => $map[$item->clid],
      ))
      ->condition('cliid', $item->cliid)
      ->execute();
  }

  foreach ($map as $clid => $instance_id) {
    db_update('checklist_complete')
      ->fields(array(
        'instance_id' => $instance_id,
      ))
      ->condition('clid', $clid)
      ->execute();
  }
  db_drop_field('checklist_complete', 'clid');

  $results = db_query('SELECT * FROM {checklist_roles}');
  foreach ($results as $roles) {
    $groups = array('instance_id' => $map[$roles->clid], 'group_id' => 'role||'. $roles->rid);
    drupal_write_record('checklist_groups', $groups);
  }
  db_drop_table('checklist_roles');
}

/**
 * Store who checked which items on a checklist.
 */
function checklist_update_7201() {
  $schema = array(
    'description' => 'The user that checked this item',
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
  );
  db_add_field('checklist_user_checks', 'checked_by', $schema);
}
